service: damage-report-plots-server-back

custom:
  arnRegionAccount:
      Fn::Join:
        - ':'
        - - ${self:provider.region}
          - Ref: 'AWS::AccountId'
  webpack:
    includeModules: true
  googleClientId:     ${file(.cred.yml):googleClientId}
  googleClientSecret: ${file(.cred.yml):googleClientSecret}
  # sessionSecret:      ${file(../.cred.yml):sessionSecret}
  googleCallbackUrlMe:  'https://plots.run/auth/callback/me'
  # googleCallbackUrlMe:  'https://2u2eb8fiug.execute-api.us-west-2.amazonaws.com/dev/auth/callback/me'
  googleCallbackUrlJob:  'https://plots.run/auth/callback/job'

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: us-west-2
  profile: drp
  memorySize: 192
  timeout: 15
  tracing: true
  environment:
    ARN_REGION_ACCOUNT: ${self:custom.arnRegionAccount}
    SNS_NOP: 'false'

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:*Item"
        - "dynamodb:Query"
      Resource:
        - Fn::Join:
          - ':'
          - - 'arn:aws:dynamodb'
            - ${self:custom.arnRegionAccount}
            - '*'
    - Effect: "Allow"
      Action:
        - "sqs:*"
      Resource:
        - Fn::Join:
          - ':'
          - - 'arn:aws:sqs'
            - ${self:custom.arnRegionAccount}
            - '*'
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - Fn::Join:
          - ':'
          - - 'arn:aws:sns'
            - ${self:custom.arnRegionAccount}
            - '*'
    - Effect: "Allow"
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

plugins:
  - serverless-webpack
  - serverless-plugin-tracing

package:
  individually: false

functions:

  generateTicket:
    handler: handler.generateTicket
    events:
      - schedule:
          rate: rate(10 minutes)
          enabled: false
    environment:
      TICKET_GENERATE_UNIT: 200

  consumeTicket:
    handler: handler.consumeTicket
    events:
      - sns: drp-consume-ticket

  queueThreads:
    handler: handler.queueThreads
    events:
      - sns: drp-queue-threads
    environment:
      THREAD_COUNT: 50  # gmailから読む最大スレッド数
      GOOGLE_CLIENT_ID: ${self:custom.googleClientId}
      GOOGLE_CLIENT_SECRET: ${self:custom.googleClientSecret}

  queueMails:
    handler: handler.queueMails
    events:
      - sns: drp-queue-mails
    environment:
      THREAD_COUNT: 100 # sqsから読む最大スレッド数
      THREAD_BATCH_COUNT: 50 # 1度のバッチ実行でgmailから読む最大スレッド数
      GOOGLE_CLIENT_ID: ${self:custom.googleClientId}
      GOOGLE_CLIENT_SECRET: ${self:custom.googleClientSecret}

  parseMails:
    handler: handler.parseMails
    events:
      - sns: drp-parse-mails
    environment:
      MAIL_COUNT: 100 # sqsから読む最大メール数

  insertReports:
    handler: handler.insertReports
    events:
      - sns: drp-insert-reports
    environment:
      REPORTS_COUNT: 100 # sqsから読む最大レコード数
      REPORTS_BATCH_COUNT: 20 # 1度のバッチ実行でfusiontablesへ書く最大レコード数
      GOOGLE_CLIENT_ID: ${self:custom.googleClientId}
      GOOGLE_CLIENT_SECRET: ${self:custom.googleClientSecret}

  createTable:
    handler: handler.createTable
    events:
      - sns: drp-create-table
    environment:
      GOOGLE_CLIENT_ID: ${self:custom.googleClientId}
      GOOGLE_CLIENT_SECRET: ${self:custom.googleClientSecret}

  checkTable:
    handler: handler.checkTable
    events:
      - sns: drp-check-table
    environment:
      GOOGLE_CLIENT_ID: ${self:custom.googleClientId}
      GOOGLE_CLIENT_SECRET: ${self:custom.googleClientSecret}

  queueJob:
    handler: handler.queueJob
    events:
      - sns: drp-queue-job
    environment:
      JOB_QUEUE_URL:
        Ref: JobQueue

  putJob:
    handler: handler.putJob
    events:
      - sns: drp-put-job

  finalizeJob:
    handler: handler.finalizeJob
    events:
      - sns: drp-finalize-job
    environment:
      GOOGLE_CLIENT_ID: ${self:custom.googleClientId}
      GOOGLE_CLIENT_SECRET: ${self:custom.googleClientSecret}

  putAgent:
    handler: handler.putAgent
    events:
      - sns: drp-put-agent

  startJob:
    handler: handler.startJob
    events:
      - schedule:
          rate: rate(2 minutes)
          enabled: false
    environment:
      JOB_QUEUE_URL:
        Ref: JobQueue

  createAgentQueue:
    handler: handler.createAgentQueue
    events:
      - sns: drp-create-agent-queue

  deleteAgentQueue:
    handler: handler.deleteAgentQueue
    events:
      - sns: drp-delete-agent-queue



resources:
  Resources:
    JobQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: JobQueue.fifo
        FifoQueue: true
        ContentBasedDeduplication: true

    JobTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: job
        AttributeDefinitions:
          - AttributeName: openId
            AttributeType: S
          - AttributeName: createTime
            AttributeType: N
        KeySchema:
          - AttributeName: openId
            KeyType: HASH
          - AttributeName: createTime
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    AgentTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: agent
        AttributeDefinitions:
          - AttributeName: openId
            AttributeType: S
        KeySchema:
          - AttributeName: openId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    TicketTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ticket
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1


    StaticResource:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: damage-report-plots-static
        WebsiteConfiguration:
          IndexDocument: index.html

